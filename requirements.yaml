# Déclarer un play
# qui s'adresse au groupe nodes
# qui déclare une tasks pour appeler le module ansible.builtin.apt
# pour installer trois packages : nano, iperf, wget (liste)

# on va ensuite rebondir sur le concept de variables
---
- name: PLAY prerequis outils sur infra
  hosts: "{{ cible | default('nodes') }}"
  become: true

  # Declarer un block vars:
  # declarer a l'interieur une variable liste_packages qui contient les éléments
  vars:
    # Déclaration d'une liste d'utilisateurs sous forme de dictionnaire
    liste_users:
      formation:
        state: present
        shell: /bin/bash
        comment: "User formation"
        #password: formation123
        password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          35346232323163336532633164313034383035613166643431346164396636396632386532326636
          6465613931386564626139306162326138356561316464640a333539643033633239383635303562
          63303839626262613934383863613764643862626634336239346462343865663465383238613664
          6662386233343430350a333262373939383565333463326537363936316532343166313662616439
          6466
      deploy:
        state: present
      dev01:
        shell: /bin/bash
        comment: "User developpement"
        #password: dev0123456

  tasks:

    - name: Module apt pour installation d'une liste de packages
      ansible.builtin.apt:
        # Filter default => utile au cas ou une variable n'est pas declarée
        name: "{{ item.key }}={{ item.value.version | default('*') }}"
        state: "{{ item.value.state }}" 
      # Loop : itération sur dictionnaire
      loop: "{{ liste_packages | dict2items }}"
      # Ajout d'une condition pour que la task ne soit rellement executee que lorsque la variable liste_packages est définie
      #when: liste_packages is defined and ansible_os_family == 'Debian'
      when: liste_packages is defined and ansible_facts['os_family'] == 'Debian'

    - name: Module yum pour installation d'une liste de packages
      ansible.builtin.yum:
        # Filter default => utile au cas ou une variable n'est pas declarée
        name: "{{ item.key }}-{{ item.value.version | default('*') }}"
        state: "{{ item.value.state }}" 
      # Loop : itération sur dictionnaire
      loop: "{{ liste_packages | dict2items }}"
      # Ajout d'une condition pour que la task ne soit rellement executee que lorsque la variable liste_packages est définie
      when: liste_packages is defined and ansible_os_family == 'RedHat'

    # Déclarer une task qui utilise le module ansible.buitin.user et qui parcours la structure de donnée
    # liste_user.
    # /!\  utilisation d'une iteration
    # /!\ valeurs par défaut (filter) => default(omit)
    - name: Creation des users
      ansible.builtin.user:
        name: "{{ item.key }}"
        shell: "{{ item.value.shell | default('/bin/bash') }}"
        comment: "{{ item.value.comment | default(omit) }}"
        state: "{{ item.value.state | default('absent') }}"
        #password: "{{ item.value.password | default(omit) | password_hash('sha512') }}"
        password: "{{ item.value.password | default(omit) }}"
      loop: "{{ liste_users | dict2items }}"
      tags:
        - crea_users
      #no_log: true

    - name: Deploiement du message of the day
      ansible.builtin.copy:
        dest: /etc/motd
        src: ./motd
        owner: root
        group: root
        mode: 0644
      tags:
        - never

    - name: Deploiement du message of the day sous forme de template
      ansible.builtin.template:
        dest: /etc/motd
        src: ./motd.j2
        owner: root
        group: root
        mode: 0644
      tags:
        - deploy_motd
